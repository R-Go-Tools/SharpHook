<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <DocumentationFile>$(ProjectDir)SharpHook.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <None Include="SharpHook.targets">
      <PackagePath>build/SharpHook.targets</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="..\icon.png">
      <Pack>True</Pack>
      <PackagePath />
    </None>
    <None Include="README.md">
      <Pack>True</Pack>
      <PackagePath />
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Include="lib\linux-x64\libuiohook.so">
      <PackagePath>runtimes/linux-x64/native/libuiohook.so</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\linux-arm\libuiohook.so">
      <PackagePath>runtimes/linux-arm/native/libuiohook.so</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\linux-arm64\libuiohook.so">
      <PackagePath>runtimes/linux-arm64/native/libuiohook.so</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\maccatalyst-x64\libuiohook.dylib">
      <PackagePath>runtimes/maccatalyst-x64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\maccatalyst-arm64\libuiohook.dylib">
      <PackagePath>runtimes/maccatalyst-arm64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\osx-x64\libuiohook.dylib">
      <PackagePath>runtimes/osx-x64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\osx-arm64\libuiohook.dylib">
      <PackagePath>runtimes/osx-arm64/native/libuiohook.dylib</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\win-x86\uiohook.dll">
      <PackagePath>runtimes/win-x86/native/uiohook.dll</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\win-x64\uiohook.dll">
      <PackagePath>runtimes/win-x64/native/uiohook.dll</PackagePath>
      <Pack>True</Pack>
    </None>
    <None Include="lib\win-arm64\uiohook.dll">
      <PackagePath>runtimes/win-arm64/native/uiohook.dll</PackagePath>
      <Pack>True</Pack>
    </None>
  </ItemGroup>

  <!-- The following properties are for the sample project -->

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) And ('$(Platform)' == 'x86' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X86'))">
    <ContentWithTargetPath Include="lib\win-x86\uiohook.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>uiohook.dll</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) And ('$(Platform)' == 'x64' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'))">
    <ContentWithTargetPath Include="lib\win-x64\uiohook.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>uiohook.dll</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows')) And ('$(Platform)' == 'ARM64' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'))">
    <ContentWithTargetPath Include="lib\win-arm64\uiohook.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>uiohook.dll</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) And ('$(Platform)' == 'x64' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'))">
    <ContentWithTargetPath Include="lib\osx-x64\libuiohook.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.dylib</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX')) And ('$(Platform)' == 'ARM64' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'))">
    <ContentWithTargetPath Include="lib\osx-arm64\libuiohook.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.dylib</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux')) And ('$(Platform)' == 'x64' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'))">
    <ContentWithTargetPath Include="lib\linux-x64\libuiohook.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.so</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux')) And ('$(Platform)' == 'ARM32' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm'))">
    <ContentWithTargetPath Include="lib\linux-arm\libuiohook.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.so</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>

  <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux')) And ('$(Platform)' == 'ARM64' Or ('$(Platform)' == 'AnyCPU' And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'))">
    <ContentWithTargetPath Include="lib\linux-arm64\libuiohook.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libuiohook.so</TargetPath>
      <Pack>False</Pack>
    </ContentWithTargetPath>
  </ItemGroup>
</Project>
